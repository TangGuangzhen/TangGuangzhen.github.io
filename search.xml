<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[Linux系统基本操作]]></title>
    <url>%2F2019%2F07%2F06%2FLinux%E7%B3%BB%E7%BB%9F%E5%9F%BA%E6%9C%AC%E6%93%8D%E4%BD%9C%2F</url>
    <content type="text"><![CDATA[常考的Linux命令 cd用于切换当前目录，它的参数是要切换到的目录的路径，可以是绝对路径，也可以是相对路径。 cd /root/runoob/ ：绝对路径cd ./runoob/ ：相对路径 ls查看文件与目录的命令 ls -l (也可以直接 ll ) ：列出长数据串，包含文件的属性与权限数据等ls -a ：列出全部的文件，连同隐藏文件（开头为.的文件）一起列出来（常用） grep文本搜索 语法：grep 参数 查找条件 文件名（注：是文件名，目录名下查找不行）主要参数：－i：不区分大小写(只适用于字母字符。）－l：查询多文件时只输出包含匹配字符的文件名。－n：显示匹配行内容及行号。比如我的/opt目录下有文件test1.txtgrep -i “teacher” test1.txt : 查询包含 teacher 文本的所有行并打印在屏幕上grep -l “teacher” test1.txt test2.txt : 在文件test1/test2中查找是否有“teacher”grep teacher *.txt : 显示当前目录下包含“teacher”且以.txt 结尾的文件（grep命令支持正则表达式，如 grep ‘[a-z]{7}‘ *.txt）ps -ef | grep java：查找指定进程(这里指定java进程)ls -l | grep -i test：把ls -l的输出中包含字母test（不区分大小写）的内容输出 （如果查询的是目录可以使用正则表达式，但是文件不行） find查找 -mtime +n : 列出在n天之前（不含n天本身）被更改过的文件名；-mtime -n : 列出在n天之内（含n天本身）被更改过的文件名；find /root（路径） -mtime 0 ： 在当前目录下查找今天之内有改动的文件find -name 文件名 ：找匹配的文件名在某一文件中查找日志（比方方法login）:可以vi打开日志文件，然后“/login”，enter，按 n 键向下继续搜索； mkdir创建指定的名称的目录 -m, –mode=模式，设定权限&lt;模式&gt; (类似 chmod)，而不是 rwxrwxrwx 减 umask-p, –parents 可以是一个路径名称。此时若路径中的某些目录尚不存在,加上此选项后,系统将自动建立好那些尚不存在的目录,即一次可以建立多个目录;mkdir test1 ： 创建一个空目录mkdir -p test2/test22 ：递归创建多个目录mkdir -m 777 test3 ：创建权限为777的目录 cp复制文件，还可以把多个文件一次性地复制到一个目录下 cp -a file1 file2 ：连同文件的所有特性把文件file1复制成文件file2cp file1 file2 file3 dir ：把文件file1、file2、file3复制到目录dir中 mv移动文件、目录或更名 mv file1 file2 file3 dir : 把文件file1、file2、file3移动到目录dir中mv file1 file2 : 把文件file1重命名为file2 rm删除文件或目录 -f *：就是force的意思，忽略不存在的文件，不会出现警告消息*-i ：互动模式，在删除前会询问用户是否操作-r ：递归删除，最常用于目录删除，它是一个非常危险的参数rm -i file : 删除文件file，在删除之前会询问是否进行该操作rm -fr dir : 强制删除目录dir中的所有文件 ps列出系统中当前运行的进程 a 显示所有用户的所有进程（包括其它用户）-e 显示所有进程,环境变量f 用树形格式来显示进程；ps -ef | grep java ： 找出所有java进程 kill终止指定的进程。需要先使用ps/pidof/pstree/top等工具获取进程PID，然后使用kill命令来杀掉该进程。 kill -9 进程号 ： 彻底杀死某个进程 tar对文件进行打包，默认情况并不会压缩，如果指定了相应的参数，它还会调用相应的压缩程序（如gzip和bzip等）进行压缩和解压。 语法：tar [主选项+辅选项] 文件或者目录使用该命令时，主选项是必须要有的，它告诉tar要做什么事情，辅选项是辅助使用的，可以选用。 主选项： c 创建新的档案文件。如果用户想备份一个目录或是一些文件，就要选择这个选项。相当于打包。x 从档案文件中释放文件。相当于拆包。t 列出档案文件的内容，查看已经备份了哪些文件。**在参数的下达中， c/x/t 仅能存在一个！不可同时存在！因为不可能同时压缩与解压缩。 辅助选项： -z ：是否同时具有 gzip 的属性？亦即是否需要用 gzip 压缩或解压？ 一般格式为xx.tar.gz或xx. tgz-j ：是否同时具有 bzip2 的属性？亦即是否需要用 bzip2 压缩或解压？一般格式为xx.tar.bz2-v ：压缩的过程中显示文件！这个常用-f ：使用档名，请留意，在 f 之后要立即接档名喔！不要再加其他参数！-p ：使用原文件的原来属性（属性不会依据使用者而变）–exclude FILE：在压缩的过程中，不要将 FILE 打包！压缩：tar -jcv -f filename.tar.bz2 filename查询：tar -jtv -f filename.tar.bz2解压：tar -jxv -f filename.tar.bz2 (解压成目录为filename的目录)注：文件名并不定要以后缀tar.bz2结尾，这里主要是为了说明使用的压缩程序为bzip2 chmod改变文件的权限 语法：chmod [options] mode filesoptions：-R 可递归遍历子目录，把修改应到目录下所有文件和子目录who：u 用户 、 g 组 、o 其他 、a 所有用户opcode：+ 增加权限 、 - 删除权限 、= 重新分配权限permission： r 读 、w 写 、 x 执行我们多数用三位八进制数字的形式来表示权限，第一位指定属主的权限，第二位指定组权限，第三位指定其他用户的权限，每位通过4(读)、2(写)、1(执行)三种数值的和来确定权限。如6(4+2)代表有读写权，7(4+2+1)有读、写和执行的权限chmod u+x file ：给file的属主增加执行权限chmod 751 file ：给file的属主分配读、写、执行(7)的权限，给file的所在组分配读、执行(5)的权限，给其他用户分配执行(1)的权限chmod u=rwx,g=rx,o=x file ：上例的另一种形式 tail查阅正在改变的日志文件 语法：tail[必要参数][选择参数][文件]-f 循环读取-n&lt;行数&gt; 显示行数tail -f 20160921.logs ：查看正在改变的日志文件；tail -3000 catalina.out：查看倒数前3000行的数据；tail -3000 catalina.out | grep ‘AA’：查看倒数前3000行包含字母’AA’的数据；ctrl+z 可退出 查看进程pidlsof -i:8080：根据端口查看进程pid: 面试题面试官常问的十个linux问题1. 如何暂停一个正在运行的进程，把其放在后台（不运行）？答案：为了停止正在运行的进程，让其在后台运行，我们可以使用组合键 Ctrl+Z。2. 什么是安装Linux所需的最小分区数量，以及如何查看系统启动信息？答案：单独一个/root分区足以执行所有的系统任务，但是强烈建议安装Linux时，需要至少三个分区：/root,/boot,/swap。一个IDE硬盘驱动器支持高达63个分区，SCSI硬盘驱动器支持超过15个分区。为了检查启动信息，我们可以使用cat或者dmesg命令，如下所示： #cat /var/log/messages 或者 #dmesg 3. 在你的Linux机器上跟踪系统事件的守护进程名是什么？答案：’syslogd’，它负责跟踪系统信息，并将跟踪日志存储在特定的日志文件里。4. 在/root分区运行’fsck’命令的最低要求是什么？答案：/root分区必须挂载为只读模式，而不是读写模式5. 如何分层复制/home目录到另一个目录？答案：Linux的’cpio’命令起到了效果。’cpio’可以分层地复制文件和目录层次结构到另一个位置。6. 在Linux中，怎样实现日志文件的自动替换？答案：’logrotate’提供日志自动替换功能。7. 怎样知道Linux中是谁在安排工作？答案：使用’at’命令加上’-l’选项，就可以查出。8. 如何在不解压tar包的前提下，查看包里的内容？答案：使用’tar -tvf’。选项‘t’(显示内容)，‘v’（详细报告tar处理的文件信息），‘f’（使用档案文件或者设备）9. 什么是页面错误，它是怎么发生的？答案：当一个程序请求内存中不存在的数据时，就会产生页面错误，导致的结果就是程序停止。10. 什么是在程序中返回代码？答案：返回代码是shell的特性。返回代码显示了程序的状态，一个成功的程序执行后返回‘0’，&amp;&amp;可以用来决定那个应用程序先执行。]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[node.js的安装]]></title>
    <url>%2F2019%2F07%2F05%2Fnode-js%E7%9A%84%E5%AE%89%E8%A3%85%2F</url>
    <content type="text"><![CDATA[Node.JS 的安装本文将向大家介绍在window安装Node.js的方法。 本安装教程以Node.js v4.4.3 LTS(长期支持版本)版本为例。 Node.js安装包及源码下载地址为：https://nodejs.org/en/download/。 你可以根据不同平台系统选择你需要的Node.js安装包。 Node.js 历史版本下载地址：https://nodejs.org/dist/Window 上安装Node.jsWindows 安装包(.msi) 32 位安装包下载地址 : https://nodejs.org/dist/v4.4.3/node-v4.4.3-x86.msi 64 位安装包下载地址 : https://nodejs.org/dist/v4.4.3/node-v4.4.3-x64.msi 本文实例以 v0.10.26 版本为例，其他版本类似， 安装步骤： 步骤 1 : 双击下载后的安装包 v0.10.26，如下所示： 步骤 2 : 点击以上的Run(运行)，将出现如下界面： 步骤 3 : 勾选接受协议选项，点击 next（下一步） 按钮 : 步骤 4 : Node.js默认安装目录为 “C:\Program Files\nodejs\” , 你可以修改目录，并点击 next（下一步）： 步骤 5 : 点击树形图标来选择你需要的安装模式 , 然后点击下一步 next（下一步） 步骤 6 :点击 Install（安装） 开始安装Node.js。你也可以点击 Back（返回）来修改先前的配置。 然后并点击 next（下一步）： 安装过程： 点击 Finish（完成）按钮退出安装向导。 检测PATH环境变量是否配置了Node.js，点击开始=》运行=》输入”cmd” =&gt; 输入命令”path”，输出如下结果： 123456PATH=C:\oraclexe\app\oracle\product\10.2.0\server\bin;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;c:\python32\python;C:\MinGW\bin;C:\Program Files\GTK2-Runtime\lib; C:\Program Files\MySQL\MySQL Server 5.5\bin;C:\Program Files\nodejs\;C:\Users\rg\AppData\Roaming\npm 我们可以看到环境变量中已经包含了C:\Program Files\nodejs检查Node.js版本 结语至此，node.js安装完成。 参考博客: https://www.simon96.online/2018/11/10/hexo-env/]]></content>
      <categories>
        <category>node.js</category>
      </categories>
      <tags>
        <tag>node.js</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Hexo博客搭建]]></title>
    <url>%2F2019%2F07%2F02%2FHexo%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%2F</url>
    <content type="text"><![CDATA[如果你和我一样是小白，从来没搭建过博客。那么恭喜你！看完这篇文章，你也可以拥有一个这样的博客啦！ 准备环境搭建本地个人博客]]></content>
      <categories>
        <category>hexo</category>
      </categories>
      <tags>
        <tag>hexo</tag>
      </tags>
  </entry>
</search>
